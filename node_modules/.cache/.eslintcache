[{"C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\index.js":"1","C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\App.js":"2","C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\reportWebVitals.js":"3","C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\components\\Calculator.js":"4"},{"size":552,"mtime":1675062410539,"results":"5","hashOfConfig":"6"},{"size":227,"mtime":1675062410538,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1675062410540,"results":"8","hashOfConfig":"6"},{"size":3248,"mtime":1675062410538,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mowvjt",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\index.js",[],[],"C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\App.js",[],[],"C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\reportWebVitals.js",[],[],"C:\\Users\\pacho\\OneDrive\\Dokumenty\\GitHub\\react-calculator\\src\\components\\Calculator.js",["23","24","25","26","27","28"],[],"import React from \"react\";\r\nimport {useState , createContext } from 'react';\r\nimport ReactSwitch from 'react-switch'\r\n\r\nexport const ThemeContext = createContext(null);\r\n\r\nfunction Calculator(){\r\n    const [theme,setTheme] = useState(\"light\")\r\n    const toggleTheme = () =>{\r\n    setTheme((curr)=>(curr===\"light\"?\"dark\" : \"light\"));\r\n    }\r\n\r\n    const [calc,setCalc] = useState(\"\");\r\n    const [result,setResult] = useState(\"\");\r\n    const ops = [\"/\" , \"*\" , \"+\" , \"-\" , \".\"];\r\n\r\n    const updateCalc = value => {\r\n    if(\r\n        ops.includes(value) && calc === \"\" || \r\n        ops.includes(value) && ops.includes(calc.slice(-1))\r\n    ){\r\n        return;\r\n      }\r\n    \r\n    setCalc(calc + value);\r\n    if(!ops.includes(value)){\r\n        setResult(eval(calc+value))\r\n    }\r\n    }\r\nconst calculate = () => {\r\n    setCalc(eval(calc));\r\n    setResult(\"\");\r\n    }\r\n\r\nconst delate =() =>{\r\n    if(calc===\"\"){\r\n    return;\r\n}\r\nconst value = calc.slice(0,-1);\r\n    setCalc(value);\r\n}\r\nconst reset = () =>{\r\n    setCalc(\"\");\r\n    setResult(\"\");\r\n    result(\"0\")\r\n\r\n}\r\n\r\nreturn(\r\n    <ThemeContext.Provider value={{ theme , toggleTheme}}>\r\n    <div className=\"calculator\">\r\n        <div className=\"top\">\r\n        <div className=\"logo\">\r\n        <h3>Calc</h3>\r\n        </div>\r\n        <div className=\"theme-box\">\r\n        <p>Theme</p>\r\n        <div className=\"theme-container\">\r\n        <div className=\"theme-btn\">\r\n            <p>Dark</p>\r\n            <p>Light</p>\r\n        </div>\r\n            <div className=\"switcher\">\r\n        <ReactSwitch onChange={toggleTheme} checked={theme===\"light\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"display\" id={theme}>\r\n        {result ? <span>({result})</span> : \"\"} \r\n        {calc || 0}\r\n    </div>\r\n    <div className=\"buttons-body\" id={theme}>\r\n        <button onClick={()=>updateCalc(\"7\")} id={theme}>7</button>\r\n        <button onClick={()=>updateCalc(\"8\")} id={theme}>8</button>\r\n        <button onClick={()=>updateCalc(\"9\")} id={theme}>9</button>\r\n        <button className=\"del\" onClick={delate} id={theme}>DEL</button>\r\n        <button onClick={()=>updateCalc(\"4\")} id={theme}>4</button>\r\n        <button onClick={()=>updateCalc(\"5\")} id={theme}>5</button>\r\n        <button onClick={()=>updateCalc(\"6\")} id={theme}>6</button>\r\n        <button onClick={()=>updateCalc(\"+\")} id={theme}>+</button>\r\n        <button onClick={()=>updateCalc(\"1\")} id={theme}>1</button>\r\n        <button onClick={()=>updateCalc(\"2\")} id={theme}>2</button>\r\n        <button onClick={()=>updateCalc(\"3\")} id={theme}>3</button>\r\n        <button onClick={()=>updateCalc(\"-\")} id={theme}>-</button>\r\n        <button onClick={()=>updateCalc(\".\")} id={theme}>.</button>\r\n        <button onClick={()=>updateCalc(\"0\")} id={theme}>0</button>\r\n        <button onClick={()=>updateCalc(\"/\")} id={theme}>/</button>\r\n        <button onClick={()=>updateCalc(\"*\")} id={theme}>*</button>\r\n    <div className=\"bottom\">\r\n            <button id={theme} className=\"del\" onClick={reset}>Reset</button>\r\n            <button id={theme} className=\"equal\"  onClick={calculate} >=</button>\r\n      </div>\r\n      \r\n      </div>\r\n     </div>\r\n     </ThemeContext.Provider>\r\n\r\n)\r\n}\r\nexport default Calculator;",{"ruleId":"29","severity":1,"message":"30","line":19,"column":29,"nodeType":"31","messageId":"32","endLine":19,"endColumn":31},{"ruleId":"29","severity":1,"message":"30","line":19,"column":44,"nodeType":"31","messageId":"32","endLine":19,"endColumn":46},{"ruleId":"29","severity":1,"message":"33","line":19,"column":44,"nodeType":"31","messageId":"32","endLine":19,"endColumn":46},{"ruleId":"29","severity":1,"message":"33","line":20,"column":29,"nodeType":"31","messageId":"32","endLine":20,"endColumn":31},{"ruleId":"34","severity":1,"message":"35","line":27,"column":19,"nodeType":"36","messageId":"37","endLine":27,"endColumn":23},{"ruleId":"34","severity":1,"message":"35","line":31,"column":13,"nodeType":"36","messageId":"37","endLine":31,"endColumn":17},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","no-eval","eval can be harmful.","CallExpression","unexpected"]